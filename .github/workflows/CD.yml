name: CD

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed

jobs:
  deploy:
    if: >
      github.event.workflow_run.conclusion == 'success' &&
      github.event.workflow_run.head_branch == 'main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub (on GitHub runner)
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: SSH to Server and Deploy
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            set -e
            cd /home/ubuntu/meetnow

            # 비밀 키 직접 변수 선언
            DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}
            DOCKERHUB_TOKEN=${{ secrets.DOCKERHUB_TOKEN }}

            docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_TOKEN

            CURRENT_PORT=$(docker ps --filter "name=meetnow-server" --format "{{.Ports}}" | grep -oP '0\.0\.0\.0:\K\d+(?=->8080)' || echo "none")

            if [ "$CURRENT_PORT" == "8081" ]; then
              CANARY_PORT=8082
            elif [ "$CURRENT_PORT" == "8082" ]; then
              CANARY_PORT=8083
            else
              CANARY_PORT=8081
            fi
            
            echo "▶️ Canary 컨테이너를 $CANARY_PORT 포트에 배포합니다."
            
            cp .env.prod .env.deploy
            sed -i "s/^PORT=.*/PORT=$NEW_PORT/" .env.deploy
            
            docker-compose --env-file .env.deploy -f docker-compose.v2.yml pull meetnow-server
            docker-compose --env-file .env.deploy -f docker-compose.v2.yml up -d --remove-orphans --force-recreate meetnow-server meetnow-redis
            
            echo "🔁 nginx 프록시 포트 전환 중..."
            sudo sed -i '58s|.*|        server 127.0.0.1:'"$NEW_PORT"';|' /etc/nginx/nginx.conf
            sudo nginx -t && sudo systemctl reload nginx
            
            echo "🩺 포트 응답 여부 확인 중..."
            MAX_RETRIES=30
            RETRY_DELAY=2
            COUNT=0
            STATUS="000"
  
            until [ "$STATUS" = "200" ] || [ $COUNT -ge $MAX_RETRIES ]; do
              STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://127.0.0.1:$NEW_PORT/actuator/health || true)
              echo "⏳ Waiting for health check... (status=$STATUS)"
              sleep $RETRY_DELAY
              COUNT=$((COUNT+1))
            done

            if [ "$STATUS" != "200" ]; then
              echo "❌ Health check failed after $MAX_RETRIES attempts"
              exit 1
            fi
            
            echo "✅ Canary 헬스 체크 성공"            
            LAST_TRAFFIC=0
            for TRAFFIC in 10 30 100; do
              sudo sed -i "s|upstream meetnow_server {.*}|upstream meetnow_server {\n    server 127.0.0.1:$CURRENT_PORT weight=$((100-TRAFFIC));\n    server 127.0.0.1:$CANARY_PORT weight=$TRAFFIC;\n}|" /etc/nginx/nginx.conf
              sudo nginx -t && sudo systemctl reload nginx
              echo "🔁 트래픽 $TRAFFIC% Canary로 전환"
              LAST_TRAFFIC=$TRAFFIC
              sleep 10
            done
            
            
            echo "✅ Canary 배포 완료 (포트: $CANARY_PORT)"
            echo "   📊 현재 트래픽 비율: 기존 서버($CURRENT_PORT): $((100-LAST_TRAFFIC))%, Canary($CANARY_PORT): $LAST_TRAFFIC%"
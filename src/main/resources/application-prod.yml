springdoc:
  default-consumes-media-type: application/json;charset=UTF-8
  default-produces-media-type: application/json;charset=UTF-8
  swagger-ui:
    url: /docs/openapi3.json
    path: /docs/swagger

spring:
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${OAUTH_GOOGLE_CLIENT_ID}
            client-secret: ${OAUTH_GOOGLE_CLIENT_SECRET}
            redirect-uri: ${OAUTH_GOOGLE_REDIRECT_URI}
            scope: profile, email

          naver:
            client-id: ${OAUTH_NAVER_CLIENT_ID}
            client-secret: ${OAUTH_NAVER_CLIENT_SECRET}
            redirect-uri: ${OAUTH_NAVER_REDIRECT_URI}
            authorization-grant-type: authorization_code
            scope: name, email
            client-name: Naver

          kakao:
            client-id: ${OAUTH_KAKAO_CLIENT_ID}
            client-secret: ${OAUTH_KAKAO_CLIENT_SECRET}
            redirect-uri: ${OAUTH_KAKAO_REDIRECT_URI}
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            scope: profile_nickname, account_email
            client-name: Kakao

        provider:
          google:
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
          naver:
            authorization_uri: https://nid.naver.com/oauth2.0/authorize
            token_uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user_name_attribute: response
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

  session:
    store-type: none

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
    show-sql: true

  data:
    secretKey: ${DATA_SECRET_KEY}
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}

jwt:
  secretKey: ${JWT_SECRET_KEY}
  access:
    expiration: ${JWT_ACCESS_EXPIRATION:86400000}
  refresh:
    expiration: ${JWT_REFRESH_EXPIRATION:86400000}

ai:
  api:
    url: ${AI_API_URL}

cloud:
  aws:
    credentials:
      access-key: ${AWS_ACCESS_KEY}
      secret-key: ${AWS_SECRET_KEY}
    region:
      static: ${AWS_REGION}
    s3:
      bucket: ${AWS_S3_BUCKET}
      key: ${AWS_S3_KEY}

server:
  port: ${PORT:8080}
